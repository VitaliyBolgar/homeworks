

// arr.length
// console.log(arr.length); // - длина массива

// ------ Методы работы с массивами ------
// arr.shift(); // - удаляет первый элемент
// arr.unshift('000'); // - прибавляет к массиву то, что написано в скобках, в начало массива
// arr.pop(); // - удаляет последний элемент массива
// arr.push(); // - прибавляет последний элемент, указанный в скобках

// ------ Создание массив массивов ------
let matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
]
console.log(matrix[0][1]); // - выводит 2. В нулевом индексе МАТРИЦЫ (1, 2, 3) он ищет первый индекс в индексе, то есть 2.

console.log(matrix[1][2]); // - выводит 6. В первом индексе МАТРИЦЫ (4, 5, 6) он ищет второй индекс в индексе, то есть 6.

// ------ Практика с массивом ------

const arr2 = ["Иван", "Степан", "Курва", "Какич", "Пукич", ]
arr2[2] = 'Коля'; // - заменит элемент с индексом 2 на Коля
arr2[5] = 'Евгений'; // - т.к. индексов 4, он просто добавит Евгения в конец

//  Метод splice выполняет выбор элементов и замену их с указанием шага и с указанием, что вставить вместо заменяемых элементов
arr2.splice(1, 1, 'Сергей'); // - что начало, сколько удалить элементов после, что вставить

let removed = arr2.splice(-1,1); // - при указании с минусом, будет считаться с конца массива


// ------ Задача на замену (splice) ------

let arr3 = ['Я', 'буду', 'очень', 'плохим', 'футболистом', 'в', 'мире', '!',]

arr3.splice(2, 3, 'самым', 'лучшим', 'программистом',)
console.log(arr3);


const arr4 = ["Иван", "Степан", "Курва", "Какич", "Пукич", ]
// console.log(arr4.slice(1, 3));


let arr5 = arr2.slice(1, 3) // - первая цифра - индекс элемента, вторая цифра - это до какого индекса не включая его
// console.log(arr5);

let arr6 = arr2.slice() // - пустые строки - просто копируют указанный массив арр2
// console.log(arr6)

// ------ forEach ------
// 
// structure
// array.forEach(element => {
    
// });

const arr = [11, 22, 33, 44, 55, 66, 77, 'dfghjk']

let arr7 = [];
arr.forEach(item => { // - => означает ретурн
    arr7.push(item*10)
});
// console.log(arr7);

// ------ Map ------ 
// Больше используют, чем форИч. Можно настраивать функции и прерывать действия

const arr8 = [11, 22, 33, 44, 55, 66, 77,]

let arr9 = arr8.map(item => {
    return item*110
})
// console.log(arr9);

// ------ Concat ------
const arr10 = [11, 22, 33, 44, 55, 66, 77,]

let arr11 = arr10.concat('Строка')
// console.log(arr11);

// ------ indexOf ------
// Ищет позиции в массиве, в консоле выводит, где находится элемент, то есть выводит номер индекса. 
const arr12 = [11, 22, 33, 222, 44, 55, 34578, 22, 11, 66, 77,]
console.log(arr12.indexOf(34578)); // - выводит 6, указанное число является шестым
// !! Если в массиве есть два одинаковых элемента, то при выводе индекса, он выводит первый
console.log(arr12.indexOf(67)); // - выводит -1, потому что элемента не существует 
console.log(arr12.lastIndexOf(22)); // - выводит последний найденный элемент, если существуют одинаковые элементы

// ------ Includes ------ 
// Понимаем, есть ли элемент в массиве
console.log(arr12.includes(33)); // - указывает True или False 


let arrp = [1,2,3,4,5]
// let a = arrp.slice(1,-1)
// console.log(a);

// let x = arrp.splice(1, 0, 'a', 'b'); // [1, 'a', 'b', 2, 3, 4, 5]
// let y = arrp.splice(6, 0, 'c'); // [1, 'a', 'b', 2, 3, 4, 'c', 5]
// let z = arrp.splice(7, 0, 'e'); // [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e']
// console.log(arrp);

function reverseMass (a)  {
    let b = [];
    for (let i = a.length-1; i>=0; i--){
        b.push(a[i]);
    }
    return b;
}
console.log(reverseMass(arrp));